#pragma checksum "D:\github\LOGISTICS\LOGISTICS\CQIE.LOGISTICS.Web\CQIE.LOGISTICS.Web\VIews\SysWaybill\Add.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a9fe930cc47c2a9e19079fb8e1b51783e4869e5d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.VIews_SysWaybill_Add), @"mvc.1.0.view", @"/VIews/SysWaybill/Add.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a9fe930cc47c2a9e19079fb8e1b51783e4869e5d", @"/VIews/SysWaybill/Add.cshtml")]
    public class VIews_SysWaybill_Add : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/node_modules/axios/dist/axios.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\github\LOGISTICS\LOGISTICS\CQIE.LOGISTICS.Web\CQIE.LOGISTICS.Web\VIews\SysWaybill\Add.cshtml"
  
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<!-- 给容器追加 class=""layui-form-pane""，即可显示为方框风格 -->
<blockquote class=""layui-elem-quote layui-text"">
    <h2>货运单添加</h2>
</blockquote>

<style>
    .people {
        padding: 10px;
        border: 1px solid #fafafa;
    }

        .people p {
            font-size: large;
            padding: 0 0 20px 0;
            font-weight: 700;
        }
</style>

<div style=""padding:0 20px"">
    <form class=""layui-form layui-form-pane""");
            BeginWriteAttribute("action", " action=\"", 500, "\"", 509, 0);
            EndWriteAttribute();
            WriteLiteral(@">
        <div class=""layui-form-item people"">
            <p>地点信息</p>
            <div class=""layui-form-item"">
                <label class=""layui-form-label"">发站</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""DepartureStation"" autocomplete=""off"" placeholder=""请输入"" lay-verify=""required"" class=""layui-input"">
                </div>

                <label class=""layui-form-label"">到站（局）</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""ArrivalStation"" autocomplete=""off"" placeholder=""请输入"" lay-verify=""required"" class=""layui-input"">
                </div>
            </div>
");
            WriteLiteral(@"            <div class=""layui-form-item"">
                <div class=""layui-inline"">
                    <label class=""layui-form-label"" style=""width:200px"">到达所属省（市）自治区</label>
                    <div class=""layui-input-inline"">
                        <select name=""ProvinceOfArrivalStation"">
                            <option");
            BeginWriteAttribute("value", " value=\"", 1562, "\"", 1570, 0);
            EndWriteAttribute();
            WriteLiteral(@"></option>
                            <option value=""四川"">私闯</option>
                            <option value=""重庆"" selected>重庆</option>
                            <option value=""北京"">北京</option>
                            <option value=""上海"">上海</option>
                            <option value=""广东"">广东</option>
                        </select>
                    </div>
                </div>
            </div>
");
            WriteLiteral(@"            <div class=""layui-form-item"">
                <label class=""layui-form-label"">发货地点</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""ShippingLocation"" lay-verify=""required"" autocomplete=""off"" class=""layui-input"">
                </div>
");
            WriteLiteral(@"                <label class=""layui-form-label"">收货地点</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""DeliveryLocation"" lay-verify=""required"" autocomplete=""off"" class=""layui-input"">
                </div>
            </div>
        </div>

");
            WriteLiteral(@"        <div class=""layui-form-item people"">
            <p>托运人信息</p>
            <div class=""layui-form-item"">
                <label class=""layui-form-label"">名称</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""Shipper_Name"" autocomplete=""off"" placeholder=""请输入"" lay-verify=""required"" class=""layui-input"">
                </div>

                <label class=""layui-form-label"">电话</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""Shipper_Phone"" autocomplete=""off"" placeholder=""请输入"" lay-verify=""required"" class=""layui-input"">
                </div>
            </div>
            <div class=""layui-form-item"">
                <label class=""layui-form-label"">地址</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""Shipper_Address"" autocomplete=""off"" placeholder=""请输入"" lay-verify=""required"" class=""layui-input"">
                </div>

                ");
            WriteLiteral(@"<label class=""layui-form-label"">邮编</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""Shipper_PostalCode"" autocomplete=""off"" placeholder=""请输入"" lay-verify=""required"" class=""layui-input"">
                </div>
                <label class=""layui-form-label"">邮箱</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""Shipper_Email"" autocomplete=""off"" placeholder=""请输入"" lay-verify=""required"" class=""layui-input"">
                </div>
            </div>
        </div>

");
            WriteLiteral(@"        <div class=""layui-form-item people"">
            <p>送货人信息</p>
            <div class=""layui-form-item"">
                <label class=""layui-form-label"">名称</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""Carrier_Name"" autocomplete=""off"" placeholder=""请输入"" lay-verify=""required"" class=""layui-input"">
                </div>

                <label class=""layui-form-label"">电话</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""Carrier_Phone"" autocomplete=""off"" placeholder=""请输入"" lay-verify=""required"" class=""layui-input"">
                </div>
            </div>
            <div class=""layui-form-item"">
                <label class=""layui-form-label"">地址</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""Carrier_Address"" autocomplete=""off"" placeholder=""请输入"" lay-verify=""required"" class=""layui-input"">
                </div>

                ");
            WriteLiteral(@"<label class=""layui-form-label"">邮编</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""Carrier_PostalCode"" autocomplete=""off"" placeholder=""请输入"" lay-verify=""required"" class=""layui-input"">
                </div>
                <label class=""layui-form-label"">邮箱</label>
                <div class=""layui-input-inline"">
                    <input type=""text"" name=""Carrier_Email"" autocomplete=""off"" placeholder=""请输入"" lay-verify=""required"" class=""layui-input"">
                </div>
            </div>
        </div>

");
            WriteLiteral(@"        <div class=""layui-form-item people"">
            <p>货物表信息</p>
            <table id=""cargoTable"" class=""layui-table"">
                <thead>
                    <tr>
                        <th>货物名称</th>
                        <th>集装箱箱型</th>
                        <th>集装箱箱类型</th>
                        <th>集装箱数量</th>
                        <th>集装箱号码</th>
                        <th>施封号码</th>
                        <th>运输费</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style=""width: 150px""><input type=""text"" style=""border:none;"" name=""GoodsName"" /></td>
                        <td style=""width:150px"">
                            <select name=""ContainerType"">
                                <option");
            BeginWriteAttribute("value", " value=\"", 6785, "\"", 6793, 0);
            EndWriteAttribute();
            WriteLiteral(@"></option>
                                <option value=""箱型1"">箱型1</option>
                                <option value=""箱型2"" selected>箱型2</option>
                                <option value=""箱型3"">箱型3</option>
                                <option value=""箱型4"">箱型4</option>
                                <option value=""箱型5"">箱型5</option>
                            </select>
                        </td>
                        <td style=""width:150px"">
                            <select name=""ContainerCatgory"">
                                <option");
            BeginWriteAttribute("value", " value=\"", 7366, "\"", 7374, 0);
            EndWriteAttribute();
            WriteLiteral(@"></option>
                                <option value=""类型1"">类型1</option>
                                <option value=""类型2"" selected>类型2</option>
                                <option value=""类型3"">类型3</option>
                                <option value=""类型4"">类型4</option>
                                <option value=""类型5"">类型5</option>
                            </select>
                        </td>
                        <td style=""width: 150px""><input type=""text"" style=""border:none;"" name=""Amount"" /></td>
                        <td style=""width: 150px""><input type=""text"" style=""border:none;"" name=""ContainerNumber"" /></td>
                        <td style=""width: 150px""><input type=""text"" style=""border:none;"" name=""SealNumber"" /></td>
                        <td style=""width: 150px""><input type=""text"" style=""border:none;"" name=""transportationFee"" /></td>
                    </tr>
                    <!-- 可以添加更多的数据行 -->
                </tbody>
            </table>
        </div>");
            WriteLiteral("\n\r\n");
            WriteLiteral(@"        <div class=""layui-form-item people"">
            <p>货运事项</p>
            <div class=""layui-form-item"">
                <label class=""layui-form-label"">附件文件</label>
                <div class=""layui-input-inline"" style=""width: 100px;"">
                    <button type=""button"" class=""layui-btn layui-btn-normal"" id=""ID-upload-demo-choose"" name=""AttachedDocuments"">选择文件</button>
                </div>

                <label class=""layui-form-label"">货物价格</label>
                <div class=""layui-input-inline"" style=""width: 100px;"">
                    <input type=""text"" name=""GoodsPrice"" placeholder=""￥"" autocomplete=""off"" class=""layui-input"">
                </div>
            </div>

            <div class=""layui-form-item"">
                <div class=""layui-form-item layui-form-text"">
                    <label class=""layui-form-label"">托运人记载事项</label>
                    <div class=""layui-input-block"">
                        <textarea placeholder=""请输入内容"" class=""layui-textarea"" name=""S");
            WriteLiteral(@"hipperRemarks""></textarea>
                    </div>
                </div>
            </div>

            <div class=""layui-form-item"">
                <div class=""layui-form-item layui-form-text"">
                    <label class=""layui-form-label"">承运人记载事项</label>
                    <div class=""layui-input-block"">
                        <textarea placeholder=""请输入内容"" name=""CarrierRemarks"" class=""layui-textarea""></textarea>
                    </div>
                </div>
            </div>

        </div>

");
            WriteLiteral(@"        <div class=""layui-form-item"">
            <button class=""layui-btn"" lay-submit lay-filter=""demo2"">确认</button>
            <button type=""reset"" class=""layui-btn layui-btn-primary"">重置</button>
        </div>
    </form>
</div>
<!-- 请勿在项目正式环境中引用该 layui.js 地址 -->
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a9fe930cc47c2a9e19079fb8e1b51783e4869e5d14569", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    layui.use(['form'], function () {
        var form = layui.form;
        var layer = layui.layer;
        var upload = layui.upload;
        // 货物表信息添加新行功能
        var cargoTable = document.querySelector('#cargoTable');

        function addRow() {
            // 监听最后一个输入框的输入事件
            var flag = 0;
            var lastInput = cargoTable.querySelector('tbody tr:last-child input[name=""transportationFee""]');
            if (lastInput) {
                lastInput.addEventListener('input', function () {
                    // 检查是否输入完成，这里简单地判断输入框的值是否非空
                    if (lastInput.value.trim() !== '') {
                        flag++;
                    }
                    if (flag === 1) {
                        // 创建新的行元素
                        var newRow = document.createElement('tr');

                        // 设置行的 HTML 内容
                        newRow.innerHTML = `
                        <tr>
                            <td style=""width: 150px""><input ");
            WriteLiteral(@"type=""text"" style=""border:none;"" name=""GoodsName"" /></td>
                            <td style=""width:150px"">
                                <select name=""ContainerType"">
                                    <option value=""""></option>
                                    <option value=""箱型1"">箱型1</option>
                                    <option value=""箱型2"" selected>箱型2</option>
                                    <option value=""箱型3"">箱型3</option>
                                    <option value=""箱型4"">箱型4</option>
                                    <option value=""箱型5"">箱型5</option>
                                </select>
                            </td>
                            <td style=""width:150px"">
                                <select name=""ContainerCatgory"">
                                    <option value=""""></option>
                                    <option value=""类型1"">类型1</option>
                                    <option value=""类型2"" selected>类型2</option>
              ");
            WriteLiteral(@"                      <option value=""类型3"">类型3</option>
                                    <option value=""类型4"">类型4</option>
                                    <option value=""类型5"">类型5</option>
                                </select>
                            </td>
                            <td style=""width: 150px""><input type=""text"" style=""border:none;"" name=""Amount""  /></td>
                            <td style=""width: 150px""><input type=""text"" style=""border:none;"" name=""ContainerNumber""  /></td>
                            <td style=""width: 150px""><input type=""text"" style=""border:none;"" name=""SealNumber""  /></td>
                            <td style=""width: 150px""><input type=""text"" style=""border:none;"" name=""transportationFee""  /></td>
                        </tr>
                        `;

                        // 将新行附加到表格
                        cargoTable.querySelector('tbody').appendChild(newRow);

                        // 重新渲染 layui 表单
                        form.render(");
            WriteLiteral(@");

                        // 为新行再次调用添加新行的函数
                        addRow();
                    }
                });
            }
        }

        // 初始化调用一次
        addRow();

        // 提交事件
        form.on('submit(demo2)', function (data) {
            // 获取表格中所有行的数据
            var tableData = getDataFromForm();
            // 获取表单字段值
            var field = data.field;

            // 从表单获取数据的函数
            function getDataFromForm() {
                var dataList = [];

                // 遍历表格中的每一行
                $('#cargoTable tbody tr').each(function () {
                    var rowData = {
                        GoodsName: $(this).find('input[name=""GoodsName""]').val(),
                        ContainerType: $(this).find('select[name=""ContainerType""]').val(),
                        ContainerCatgory: $(this).find('select[name=""ContainerCatgory""]').val(),
                        Amount: $(this).find('input[name=""Amount""]').val(),
                        Container");
            WriteLiteral(@"Number: $(this).find('input[name=""ContainerNumber""]').val(),
                        SealNumber: $(this).find('input[name=""SealNumber""]').val(),
                        TransportationFee: $(this).find('input[name=""transportationFee""]').val()
                    };

                    // 将行数据添加到列表
                    dataList.push(rowData);
                });

                return dataList;
            }

            // 将表格数据添加到表单字段中
            field.goods = tableData;
            /*console.log(field)*/
            // 显示填写结果，仅作演示用
            layer.confirm('确定要添加信息吗?', {
                icon: 3,
                title: '提示'
            }, function (index) {
                /* 执行 AJAX 请求*/
                axios({
                    url: '/SysWaybill/Add',
                    method: 'POST',
                    data: field,
                    headers: {
                        'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryVQmB3imziMBCv4zV'
                 ");
            WriteLiteral(@"   }
                }).then(result => {
                    /*解析JSON字符串*/
                    console.log(result.data)
                    var jsonData = JSON.parse(result.data);
                    console.log(jsonData)
                    layer.msg(jsonData.message, { icon: 1 });

                    ///* 延迟2秒后执行其他逻辑*/
                    //setTimeout(function () {
                    //    executeCommonLogic();
                    //}, 2000);
                }).catch(error => {
                    /*请求失败处理*/
                    console.log(result.data)
                    var jsonData = JSON.parse(error.data);
                    layer.msg(jsonData.message, { icon: 2 });
                });
            })
            
            // 在这里执行 Ajax 等操作，使用 field 对象提交数据
            // ...

            return false; // 阻止默认 form 跳转
        });


        // 渲染上传组件
        upload.render({
            elem: '#ID-upload-demo-choose',
            url: '', // 此处配置你自己的上传接口即可
            au");
            WriteLiteral("to: false,\r\n            // multiple: true,\r\n            bindAction: \'#ID-upload-demo-action\',\r\n            done: function (res) {\r\n                layer.msg(\'上传成功\');\r\n                console.log(res)\r\n            }\r\n        });\r\n    })\r\n</script>\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
